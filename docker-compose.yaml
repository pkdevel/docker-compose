include:
  - docker-compose.arr.yaml
  - docker-compose.atuin.yaml
  - docker-compose.git.yaml
  - docker-compose.http.yaml
  - docker-compose.iot.yaml
  - docker-compose.media.yaml
  - docker-compose.monitoring.yaml

services:
  dockerhost:
    image: qoomon/docker-host:latest
    container_name: dockerhost
    cap_add: ["NET_ADMIN", "NET_RAW"]
    restart: unless-stopped
    networks:
      - dockerhost
    environment:
      - TZ=Europe/Berlin

  diun:
    image: crazymax/diun:latest
    container_name: diun
    restart: unless-stopped
    environment:
      - TZ=Europe/Berlin
      - DIUN_WATCH_WORKERS=20
      - DIUN_WATCH_SCHEDULE=0 */6 * * *
      - DIUN_WATCH_JITTER=30s
      - DIUN_WATCH_RUNONSTARTUP=true
      - DIUN_PROVIDERS_DOCKER=true
      - DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true
      - DIUN_NOTIF_TELEGRAM_TOKEN=${DIUN_NOTIF_TELEGRAM_TOKEN}
      - DIUN_NOTIF_TELEGRAM_CHATIDS=${DIUN_NOTIF_TELEGRAM_CHATIDS}
      - DIUN_NOTIF_TELEGRAM_TEMPLATEBODY="Docker tag {{ if .Entry.Image.HubLink }}[{{ .Entry.Image }}]({{ .Entry.Image.HubLink }}){{ else }}{{ .Entry.Image }}{{ end }} which you subscribed to through {{ .Entry.Provider }} provider {{ if (eq .Entry.Status "new") }}is available{{ else }}has been updated{{ end }} on {{ .Entry.Image.Domain }} registry"
    volumes:
      - /data/docker/volumes/diun:/data
      - /var/run/docker.sock:/var/run/docker.sock
    command: serve

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    restart: unless-stopped
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 9081:80/tcp
    environment:
      - TZ=Europe/Berlin
      - WEBPASSWORD=${WEBPASSWORD}
      - VIRTUAL_HOST=${HOSTNAME}
      - IPv6=false
      - PIHOLE_DNS_=208.67.222.222;208.67.220.220
      - DNSSEC=true
      - REV_SERVER=true
      - REV_SERVER_DOMAIN=${DOMAIN_INT}
      - REV_SERVER_TARGET=192.168.178.1
      - REV_SERVER_CIDR=192.168.178.0/24
      - DNSMASQ_LISTENING=all
    volumes:
      - /data/docker/volumes/pihole/cfg:/etc/pihole/
      - /data/docker/volumes/pihole/dnsmasq.d:/etc/dnsmasq.d/

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
      - SERVERURL=${DOMAIN_EXT}
      - SERVERPORT=51820
      - PEERS=iphone,macbook
      - PEERDNS=auto
      - ALLOWEDIPS=0.0.0.0/0
      - PERSISTENTKEEPALIVE_PEERS=all
      - LOG_CONFS=true
    volumes:
      - /data/docker/volumes/wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    networks:
      - dockerhost
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

networks:
  dockerhost:
